<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Category theory on Jacob&#39;s blog</title>
    <link>https://jagr2808.github.io/tags/category-theory/</link>
    <description>Recent content in Category theory on Jacob&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Aug 2020 11:08:13 +0200</lastBuildDate>
    
	<atom:link href="https://jagr2808.github.io/tags/category-theory/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cogroups and Groups of Schemes</title>
      <link>https://jagr2808.github.io/posts/cogroups/</link>
      <pubDate>Sat, 01 Aug 2020 11:08:13 +0200</pubDate>
      
      <guid>https://jagr2808.github.io/posts/cogroups/</guid>
      <description>\( \DeclareMathOperator{\Spec}{Spec} \DeclareMathOperator{\C}{\mathbb{C}} \DeclareMathOperator{\Z}{\mathbb{Z}} \DeclareMathOperator{\Hom}{Hom} \DeclareMathOperator{\Mod}{Mod} \)
Introduction I was watching Richard E. Borchards lecture series on schemes where he talked about groups in the category of schemes. Thinking about this I stumbled upon the idea of cogroups. I was already vaguely familiar with the idea of coalgebras, but I hadn&amp;rsquo;t really looked at cogroups before (or so I thought). So this blogpost will just be my ramblings of what I found out.</description>
    </item>
    
    <item>
      <title>Kan extensions</title>
      <link>https://jagr2808.github.io/posts/kan-extensions/</link>
      <pubDate>Sat, 30 May 2020 21:09:44 +0200</pubDate>
      
      <guid>https://jagr2808.github.io/posts/kan-extensions/</guid>
      <description>\( \DeclareMathOperator{\Spec}{Spec} \DeclareMathOperator{\C}{\mathbb{C}} \DeclareMathOperator{\Z}{\mathbb{Z}} \DeclareMathOperator{\Hom}{Hom} \DeclareMathOperator{\Mod}{Mod} \)
Test
Recently I learned about Kan extension which is a generalization of (co)limits in category theory. So I thought it would be fun to write a little blog post introducing limits and Kan extensions. The idea of a (co)limit is to capture information about a diagram in just one object. The idea of Kan extensions is similar, but instead of trying to capture information in a single object we do it in some other diagram.</description>
    </item>
    
  </channel>
</rss>